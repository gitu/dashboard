name: default

on:
  release:
    types: [created]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  back:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Build
        run: go build -v ./...
        working-directory: back

      - name: Test
        run: go test -v ./...
        working-directory: back

  tagger:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tagger.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          include: 'v*'
          commit-ish: 'HEAD'
          abbrev: false

      - name: Show Tag
        id: display
        run: |
          echo 'Output from Find Tag: ${{steps.tagger.outputs.tag}}'

  front:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - run: npm install --verbose
        working-directory: ./front/
      - run: npm run typecheck
        working-directory: ./front/
      - run: npm run lint
        working-directory: ./front/
      - run: npm run build
        working-directory: ./front/
  
  docker:
    runs-on: ubuntu-latest
    needs: [back, front, tagger]
    steps:
      - uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gitu/dashboard:${{needs.tagger.outputs.tag}}
          build-args: VERSION=${{needs.tagger.outputs.tag}}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
